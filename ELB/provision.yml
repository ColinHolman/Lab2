---
 - name:  provisioning EC2 instances using Ansible
   hosts: localhost
   connection: local
   gather_facts: False
   tags: provisioning
   vars_files:
     - grp_vars.yaml

   tasks:

     - name: Create my security group
       local_action:
         module: ec2_group
         name: "{{ security_group }}"
         description: Security Group for webserver Servers
         region: "{{ region }}"
         rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 8080
              to_port: 8080
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0
         rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0
       register: webserver_sg

     - name: Create the ELB
       ec2_elb_lb:
         name: load-balancer
         state: present
         region: "{{ region }}"
         zones:
           - "{{ ap_zone1 }}"
           - "{{ ap_zone2 }}"
         listeners:
           - protocol: http
             load_balancer_port: 80
             instance_port: 80
       register: elb

     - name: Launch the new EC2 Instance
       local_action:  ec2
                      group={{ security_group }}
                      instance_type={{ instance_type}}
                      image={{ image }}
                      wait=true
                      region={{ region }}
                      keypair={{ keypair }}
                      count={{count}}
                      user_data={{ lookup('file', '/home/ubuntu/ELB/user-data.sh') }}
       register: ec2_instances

     - name: Add Tagging to EC2 instance
       local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
       with_items: "{{ ec2_instances.instances }}"
       args:
         tags:
           Name: Webserver

     - name: Add each EC2 instance to the ELB
       ec2_elb:
         state: present
         ec2_elbs: load-balancer
         region: "{{ region }}"
         instance_id: "{{ item.id }}"
       with_items: "{{ ec2_instances.instances }}"

     - name: Wait for servers to come online
       wait_for:
         host: "{{ item.public_dns_name }}"
         port: 22
         timeout: 180
         state: started
       with_items: "{{ ec2_instances.instances }}"

     - name: Add server IP to host grp
       add_host:
         hostname: "{{ item.public_ip }}"
         groupname: launched
       with_items: "{{ ec2_instances.instances }}"